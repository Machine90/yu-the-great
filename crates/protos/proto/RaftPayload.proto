syntax = "proto3";
package RaftPayloadProto;

import "RaftLog.proto";
import "RaftGroup.proto";

enum MessageType {
    MsgHup = 0;
    MsgBeat = 1;
    // leader -- local --> leader; 
    // follower -- local --> follower -- forward --> leader
    MsgPropose = 2;
    // leader --> follower
    MsgAppend = 3;
    // follower --> leader
    MsgAppendResponse = 4;
    MsgRequestVote = 5;
    MsgRequestVoteResponse = 6;
    MsgSnapshot = 7;
    // leader --> follower
    MsgHeartbeat = 8;
    // follower --> leader
    MsgHeartbeatResponse = 9;
    // rpc --> leader (as server), then step local.
    MsgUnreachable = 10;
    MsgSnapStatus = 11;
    // leader -- local --> leader
    MsgCheckQuorum = 12;
    // follower -- forward --> leader
    MsgTransferLeader = 13;
    // leader --> follower
    MsgTimeoutNow = 14;
    // follower -- forward --> leader
    MsgReadIndex = 15;
    // leader -- response --> follower
    MsgReadIndexResp = 16;
    MsgRequestPreVote = 17;
    MsgRequestPreVoteResponse = 18;
}

message Message {
    MessageType msg_type = 1;
    uint64 to = 2;
    uint64 from = 3;
    uint64 term = 4;
    // logTerm is generally used for appending Raft logs to followers. For example,
    // (type=MsgAppend,index=100,log_term=5) means leader appends entries starting at
    // index=101, and the term of entry at index 100 is 5.
    // (type=MsgAppendResponse,reject=true,index=100,log_term=5) means follower rejects some
    // entries from its leader as it already has an entry with term 5 at index 100.
    uint64 log_term = 5;
    uint64 index = 6;
    repeated RaftLogProto.Entry entries = 7;
    uint64 commit = 8;
    uint64 commit_term = 15;
    RaftLogProto.Snapshot snapshot = 9;
    uint64 request_snapshot = 13;
    bool reject = 10;
    uint64 reject_hint = 11;
    bytes context = 12;
    uint64 priority = 14;
}

message ProgressProto {
    uint64 node_id = 1;
    uint64 matched = 2;
    uint64 next = 3;
    uint64 committed_index = 4;
    uint64 pending_request_snapshot = 5;
    uint64 pending_snapshot = 6;
    bool recent_active = 7;
    bool probe_sent = 8;
    string state = 9;
}

message StatusProto {
    uint64 node_id = 1;
    uint32 group_id = 2;
    string role = 3;
    uint64 leader_id = 4;
    uint64 commit = 5;
    uint64 term = 6;
    uint64 last_vote = 7;
    uint64 applied = 8;
    RaftLogProto.ConfState conf_state = 9;
    repeated RaftPayloadProto.ProgressProto voter_progress = 10;
    repeated RaftGroupProto.EndpointProto endpoints = 11;
}
